OBJDIR=out
SRCDIR=src
BINDIR=bin
TSTDIR=test
INCDIR=inc
DEPDIR=deps
INCLUDE=-I${INCDIR}
CXX=g++
CXXFLAGS=-I${INCDIR} -g -Wall -c
SOURCES=${wildcard ${SRCDIR}/*.cc}
OBJECTS=${patsubst ${SRCDIR}/%.cc, ${OBJDIR}/%.o,${SOURCES}}
EXEC=pegs
cmdTestBuild=${CXX} -g -Wall ${INCLUDE} $^ $(TSTDIR)/$@.cc -o $(BINDIR)/$@

vpath %.test.cc ${TSTDIR}
vpath %.test.o ${BINDIR}
vpath %.cc ${SRCDIR}
vpath %.o ${OBJDIR}
vpath %.h ${INCDIR}

$(EXEC) : $(OBJECTS) $(TSTDIR)/main.cc
	$(CXX) -g -Wall $(INCLUDE) $(OBJDIR)/*.o test/main.cc -o $(EXEC)

${OBJDIR}/%.o : $(addprefix $(SRCDIR)/, %.cc)
	$(CXX) ${CXXFLAGS} $< -o $@

peg.test : $(addsuffix .o, iterator display grfdisplay component disc peg score)
	$(cmdTestBuild)

config.test : $(addsuffix .o, config)
	$(cmdTestBuild)

keyinput.test : $(addsuffix .o, input keyinput)
	$(cmdTestBuild)

cmdinput.test : $(addsuffix .o, input cmdinput)
	$(cmdTestBuild)

linedisplay.test : $(addsuffix .o, linedisplay)
	$(cmdTestBuild)

grfdisplay.test : $(addsuffix .o, grfdisplay)
	$(cmdTestBuild)

game.test : $(addsuffix .o, component disc peg score game display grfdisplay linedisplay iterator)
	$(cmdTestBuild)


.PHONY : clean
clean:
	rm -f $(OBJDIR)/*.o  $(BINDIR)/* $(EXEC) > /dev/null  2>&1

